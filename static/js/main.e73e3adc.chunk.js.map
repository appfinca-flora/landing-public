{"version":3,"sources":["serviceWorker.js","components/Loading/Loading.js","config.js","index.js","i18n lazy /^/.//.*/.js$/ groupOptions: {} namespace object"],"names":["Boolean","window","location","hostname","match","Loading","_ref","small","React","createElement","style","paddingTop","textAlign","Spinner","animation","variant","size","supportedLocales","Home","lazy","Faq","Privacy","Terms","Acknowledgements","NotFound","ImpactReport2020","ImpactReport2021","routes","defaultLocale","AppContext","createContext","App","useRouteMatch","locale","params","navigator","language","userLanguage","toLowerCase","includes","split","currentLocale","setCurrentLocale","useState","messages","setMessages","useEffect","concat","then","module","default","cache","createIntlCache","intl","createIntl","prefix","url","endsWith","appContext","urlPrefix","Provider","value","RawIntlProvider","Helmet","formatMessage","id","defaultMessage","name","content","rel","href","hreflang","map","index","key","type","property","Suspense","fallback","Switch","Object","keys","path","i","Route","exact","component","rootEl","document","getElementById","render","ReactDOM","hasChildNodes","hydrate","Router","join","serviceWorker","ready","registration","unregister","TagManager","initialize","gtmId","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","e","Error","code","ids","exports"],"mappings":"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","file":"static/js/main.e73e3adc.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import Spinner from \"react-bootstrap/Spinner\";\n\nimport React from \"react\";\n\nexport default function Loading({ small }) {\n  return (\n    <div>\n      {/* This extra div is necessary for react-snap to work */}\n      <div\n        style={{\n          paddingTop: \"6rem\",\n          textAlign: \"center\",\n        }}\n      >\n        <Spinner animation=\"grow\" variant=\"primary\" size={small ? \"sm\" : \"\"} />\n      </div>\n    </div>\n  );\n}\n","import { lazy } from \"react\";\n\nexport const supportedLocales = [\n  \"en\", // the first one is the default locale\n  // \"en-gb\",\n  \"zh-cn\",\n  \"zh-tw\",\n  // \"es\",\n  // \"de\",\n  // \"fr\",\n  // \"ja\",\n  // \"ko\",\n  // \"ar\",\n  // \"ru\",\n  // \"pt\",\n  // \"it\",\n  // \"nl\",\n  // \"pl\",\n  // \"tr\",\n  // \"th\"\n];\n\nconst Home = lazy(() => import(\"routes/Home\"));\nconst Faq = lazy(() => import(\"routes/Faq\"));\nconst Privacy = lazy(() => import(\"routes/Privacy\"));\nconst Terms = lazy(() => import(\"routes/Terms\"));\nconst Acknowledgements = lazy(() => import(\"routes/Acknowledgements\"));\nconst NotFound = lazy(() => import(\"routes/NotFound\"));\n\nconst ImpactReport2020 = lazy(() => import(\"routes/news/ImpactReport2020\"));\nconst ImpactReport2021 = lazy(() => import(\"routes/news/ImpactReport2021\"));\nconst ImpactReport2022 = lazy(() => import(\"routes/news/ImpactReport2022\"));\nconst Widget = lazy(() => import(\"routes/tips/Widget\"));\nconst StylizeGarden = lazy(() => import(\"routes/tips/StylizeGarden\"));\nconst AutoStopwatch = lazy(() => import(\"routes/tips/AutoStopwatch\"));\nconst AppWhitelist = lazy(() => import(\"routes/tips/AppWhitelist\"));\n\nexport const routes = {\n  // Each key specifies the url after \"/\"\n  \"\": Home,\n  \"faq\": Faq,\n  \"privacy\": Privacy,\n  \"terms\": Terms,\n  \"acknowledgements\": Acknowledgements,\n\n  \"news/impact-report\": ImpactReport2022,\n  \"news/impact-report-2021\": ImpactReport2021,\n  \"news/impact-report-2020\": ImpactReport2020,\n  \"tips/widget\": Widget,\n  \"tips/stylize-garden\": StylizeGarden,\n  \"tips/auto-stopwatch\": AutoStopwatch,\n  \"tips/app-whitelist\": AppWhitelist,\n\n  \"404\": NotFound\n};\n","import \"themes/bootstrap-theme.scss\";\nimport \"./index.scss\";\n\n// Support IE 11+\nimport \"react-app-polyfill/ie11\";\nimport \"react-app-polyfill/stable\";\n\nimport React, { useState, useEffect, Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport {\n  BrowserRouter as Router,\n  useRouteMatch,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport { createIntl, createIntlCache, RawIntlProvider } from \"react-intl\";\n\nimport { Helmet } from \"react-helmet\";\n\nimport TagManager from \"react-gtm-module\";\n\nimport Loading from \"components/Loading\";\n\nimport { routes, supportedLocales } from \"./config\";\n\nconst defaultLocale = supportedLocales[0];\n\nexport const AppContext = React.createContext();\n\nfunction App() {\n  // Set up states\n  const match = useRouteMatch();\n  let locale = match.params.locale;\n  if (!locale) {\n    locale = navigator.language || navigator.userLanguage; // for IE\n    locale = locale.toLowerCase();\n    if (!supportedLocales.includes(locale)) {\n      locale = locale.split(/[-_]/)[0];\n      if (!supportedLocales.includes(locale)) locale = defaultLocale;\n    }\n  }\n  const [currentLocale, setCurrentLocale] = useState(locale);\n  const [messages, setMessages] = useState();\n  useEffect(() => {\n    if (locale !== defaultLocale) {\n      setCurrentLocale(locale);\n      setMessages(null);\n      import(`i18n/${locale}.js`).then((module) => {\n        setMessages(module.default);\n      });\n    }\n  }, [locale]); // update `currentLocale` only if `locale` changes\n\n  if (locale !== defaultLocale && !messages) return <Loading />;\n\n  // Set up React-intl\n  const cache = createIntlCache();\n  const intl = createIntl(\n    {\n      locale: currentLocale,\n      messages: messages,\n    },\n    cache\n  );\n\n  // Set up client-side routing\n  let prefix = match.url; // matched portion of URL\n  if (!prefix.endsWith(\"/\")) prefix = prefix + \"/\";\n\n  // Set up AppContext value\n  const appContext = {\n    supportedLocales: supportedLocales,\n    currentLocale: currentLocale,\n    intl: intl,\n    urlPrefix: prefix,\n  };\n\n  return (\n    <AppContext.Provider value={appContext}>\n      <RawIntlProvider value={intl}>\n        <Helmet>\n          <title>\n            {intl.formatMessage({\n              id: \"index.title\",\n              defaultMessage: \"Flora - Green Focus\",\n            })}\n          </title>\n          <meta name=\"author\" content=\"AppFinca Inc.\" />\n\n          {/* Google SEO */}\n          <meta\n            name=\"description\"\n            content={intl.formatMessage({\n              id: \"index.description\",\n              defaultMessage:\n                \"Flora is a free productivity app that helps you stay off your phone, clear to-do lists, and build positive, life-changing habits. Whenever you want to make progress towards your goals, grow trees in Flora!\",\n            })}\n          />\n          <link\n            rel=\"alternate\"\n            href=\"https://flora.appfinca.com\"\n            hreflang=\"x-default\"\n          />\n          {supportedLocales.map((locale, index) => (\n            <link\n              key={index}\n              rel=\"alternate\"\n              href={\"https://flora.appfinca.com/\" + locale}\n              hreflang={locale}\n            ></link>\n          ))}\n          <script type=\"application/ld+json\">\n            {`{\n            \"@context\": \"http://schema.org\",\n            \"@type\": \"WebSite\",\n            \"name\": \"${intl.formatMessage({\n              id: \"index.title\",\n              defaultMessage: \"Flora - Green Focus\",\n            })}\",\n            \"url\": \"https://flora.appfinca.com\",\n            \"logo\": \"https://flora.appfinca.com/static/media/icon-512.png\",\n            \"contactPoint\" : [{\n              \"@type\" : \"ContactPoint\",\n              \"url\": \"https://flora.appfinca.com/faq\",\n              \"email\": \"support@flora.appfinca.com\",\n              \"contactType\": \"customer support\"\n            }],\n            \"sameAs\": [\n              \"https://www.facebook.com/FloraAppfinca\",\n              \"https://twitter.com/FloraApp\"\n            ]\n          }`}\n          </script>\n          <script type=\"application/ld+json\">\n            {`{\n            \"@context\": \"http://schema.org\",\n            \"@type\": \"Country\",\n            \"address\": {\n              \"addressCountry\": \"US\"\n            }\n          }`}\n          </script>\n\n          {/* Facebook Open Graph */}\n          <meta property=\"fb:app_id\" content=\"100749660278765\" />\n          <meta property=\"og:type\" content=\"website\" />\n          <meta\n            property=\"og:url\"\n            content={\"https://flora.appfinca.com\" + prefix}\n          />\n          <meta property=\"og:site_name\" content=\"Flora\" />\n          <meta\n            property=\"og:title\"\n            content={intl.formatMessage({\n              id: \"index.social.title\",\n              defaultMessage: \"Flora - Green Focus\",\n            })}\n          />\n          <meta\n            property=\"og:description\"\n            content={intl.formatMessage({\n              id: \"index.social.description\",\n              defaultMessage:\n                \"A pleasant way to stay off the phone, clear to-dos, and build new habits.\",\n            })}\n          />\n          <meta\n            property=\"og:image\"\n            content=\"https://flora.appfinca.com/static/media/social.png\"\n          />\n          <meta property=\"og:locale\" content={locale} />\n\n          {/* Twitter Card */}\n          <meta name=\"twitter:card\" content=\"summary_large_image\" />\n          <meta name=\"twitter:site\" content=\"@FloraApp\" />\n          <meta\n            name=\"twitter:title\"\n            content={intl.formatMessage({\n              id: \"index.social.title\",\n              defaultMessage: \"Flora - Green Focus\",\n            })}\n          />\n          <meta\n            name=\"twitter:description\"\n            content={intl.formatMessage({\n              id: \"index.social.description\",\n              defaultMessage:\n                \"A pleasant way to stay off the phone, clear to-dos, and build new habits.\",\n            })}\n          />\n          <meta\n            name=\"twitter:image\"\n            content=\"https://flora.appfinca.com/static/media/social.png\"\n          />\n        </Helmet>\n\n        <Suspense fallback={<Loading small />}>\n          <Switch>\n            {Object.keys(routes).map((path, i) => (\n              <Route\n                key={i}\n                exact\n                path={`${prefix}${path}`}\n                component={routes[path]}\n              />\n            ))}\n            <Route component={routes[\"404\"]} />\n          </Switch>\n        </Suspense>\n      </RawIntlProvider>\n    </AppContext.Provider>\n  );\n}\n\nconst rootEl = document.getElementById(\"root\");\nlet render = ReactDOM.render;\nif (rootEl.hasChildNodes()) {\n  render = ReactDOM.hydrate;\n}\nrender(\n  <Router>\n    <Switch>\n      <Route path={`/:locale(${supportedLocales.join(\"|\")})`} component={App} />\n      <Route component={App} />\n    </Switch>\n  </Router>,\n  rootEl\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n// Google Tag Manager. Add Google Universal Analytics tags or Google Ads\n// Conversion Tracking tags on GTM.\nTagManager.initialize({\n  gtmId: \"GTM-PZQ6LWF\",\n});\n","var map = {\n\t\"./zh-cn.js\": [\n\t\t253,\n\t\t18\n\t],\n\t\"./zh-tw.js\": [\n\t\t254,\n\t\t19\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 250;\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}