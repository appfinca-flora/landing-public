{"version":3,"sources":["../node_modules/react-bootstrap/esm/Container.js","../node_modules/react-intl/lib/src/components/message.js","routes/tips/Ios14Widget/Ios14Widget.module.scss","routes/tips/Ios14Widget/preview.png","routes/tips/Ios14Widget/banner.png","routes/tips/Ios14Widget/widget.png","routes/tips/Ios14Widget/Ios14Widget.js"],"names":["Container","React","forwardRef","_ref","ref","bsPrefix","fluid","_ref$as","as","Component","className","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","suffix","createElement","_extends","classNames","displayName","defaultProps","shallowEquals","shallowEquals_","FormattedMessage","_super","apply","this","arguments","__extends","prototype","shouldComponentUpdate","nextProps","_a","values","otherProps","__rest","nextValues","nextOtherProps","render","_this","Context","Consumer","intl","invariantIntlContext","formatMessage","textComponent","Text","_b","id","description","defaultMessage","children","_c","tagName","nodes","Array","isArray","__spreadArrays","module","exports","YearEndReport2020","locale","appContext","useContext","AppContext","styles","component","Helmet","src","preview","alt","mask","banner","primary","msg","em","strong","widget"],"mappings":"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","file":"static/js/9.077246e7.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  fluid: false\n};\nvar Container = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      fluid = _ref.fluid,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"fluid\", \"as\", \"className\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'container');\n  var suffix = typeof fluid === 'string' ? \"-\" + fluid : '-fluid';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, fluid ? \"\" + prefix + suffix : prefix)\n  }));\n});\nContainer.displayName = 'Container';\nContainer.defaultProps = defaultProps;\nexport default Container;","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport { __extends, __rest, __spreadArrays } from \"tslib\";\nimport * as React from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nimport * as shallowEquals_ from 'shallow-equal/objects';\nvar shallowEquals = shallowEquals_.default || shallowEquals_;\nvar FormattedMessage = /** @class */ (function (_super) {\n    __extends(FormattedMessage, _super);\n    function FormattedMessage() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    FormattedMessage.prototype.shouldComponentUpdate = function (nextProps) {\n        var _a = this.props, values = _a.values, otherProps = __rest(_a, [\"values\"]);\n        var nextValues = nextProps.values, nextOtherProps = __rest(nextProps, [\"values\"]);\n        return (!shallowEquals(nextValues, values) ||\n            !shallowEquals(otherProps, nextOtherProps));\n    };\n    FormattedMessage.prototype.render = function () {\n        var _this = this;\n        return (React.createElement(Context.Consumer, null, function (intl) {\n            invariantIntlContext(intl);\n            var formatMessage = intl.formatMessage, _a = intl.textComponent, Text = _a === void 0 ? React.Fragment : _a;\n            var _b = _this.props, id = _b.id, description = _b.description, defaultMessage = _b.defaultMessage, values = _b.values, children = _b.children, _c = _b.tagName, Component = _c === void 0 ? Text : _c;\n            var descriptor = { id: id, description: description, defaultMessage: defaultMessage };\n            var nodes = formatMessage(descriptor, values);\n            if (!Array.isArray(nodes)) {\n                nodes = [nodes];\n            }\n            if (typeof children === 'function') {\n                return children(nodes);\n            }\n            if (Component) {\n                // Needs to use `createElement()` instead of JSX, otherwise React will\n                // warn about a missing `key` prop with rich-text message formatting.\n                return React.createElement.apply(React, __spreadArrays([Component, null], nodes));\n            }\n            return nodes;\n        }));\n    };\n    FormattedMessage.displayName = 'FormattedMessage';\n    return FormattedMessage;\n}(React.Component));\nexport default FormattedMessage;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"Ios14Widget_component__1usFn\",\"mask\":\"Ios14Widget_mask__2SsK6\",\"widget\":\"Ios14Widget_widget__3vB0F\"};","module.exports = __webpack_public_path__ + \"static/media/preview.eed700ce.png\";","module.exports = __webpack_public_path__ + \"static/media/banner.8513aef6.png\";","module.exports = __webpack_public_path__ + \"static/media/widget.ea20fdcc.png\";","import styles from \"./Ios14Widget.module.scss\";\nimport \"media/icon-font/icon-font.css\";\nimport preview from \"./preview.png\";\nimport banner from \"./banner.png\";\nimport widget from \"./widget.png\";\n\nimport React, { useContext } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { FormattedMessage } from \"react-intl\";\nimport classNames from \"classnames\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\n\nimport { AppContext } from \"index.js\";\n\nexport default function YearEndReport2020({ locale }) {\n  const appContext = useContext(AppContext);\n\n  return (\n    <div className={classNames(styles.component)}>\n      <Helmet>\n        <title>\n          {appContext.intl.formatMessage({\n            id: \"Ios14Widget.pageTitle\",\n            defaultMessage: \"Flora iOS 14 Widget\",\n          })}\n        </title>\n      </Helmet>\n\n      {/* For in-app crawling */}\n      <div className=\"d-none\">\n        <div id=\"topic\">\n          <FormattedMessage id=\"Ios14Widget.app.topic\" defaultMessage=\"Tip\" />\n        </div>\n        <div id=\"title\">\n          <FormattedMessage\n            id=\"Ios14Widget.app.title\"\n            defaultMessage=\"Itâ€™s time to breathe a bit of life into your Home screen.\"\n          />\n        </div>\n        <img id=\"banner\" src={preview} alt=\"\" />\n      </div>\n\n      <div className=\"position-relative\">\n        <div className={styles.mask}></div>\n        <img src={banner} className=\"img-fluid d-block mx-auto\" alt=\"\" />\n      </div>\n      <Container>\n        <h2 className=\"mt-4 mb-1\">\n          <FormattedMessage\n            id=\"Ios14Widget.title\"\n            defaultMessage=\"<primary>Flora</primary> Widgets for iOS 14\"\n            values={{\n              primary: (msg) => (\n                <span className=\"text-primary-dark\">{msg}</span>\n              ),\n            }}\n          />\n        </h2>\n        <h6 className=\"mb-3\">\n          <FormattedMessage\n            id=\"Ios14Widget.subtitle\"\n            defaultMessage=\"Productivity right on your Home screen.\"\n          />\n        </h6>\n\n        <p>\n          <FormattedMessage\n            id=\"Ios14Widget.greet\"\n            defaultMessage=\"Always forget to plant trees or your to-dos? No worry. Flora widgets get you covered. By adding a Flora widget on the Home screen, you will be reminded of your trees and to-dos whenever you go.\"\n            values={{ em: (msg) => <em>{msg}</em> }}\n          />\n        </p>\n\n        <h4 className=\"mt-4 mb-3\">\n          <FormattedMessage\n            id=\"Ios14Widget.steps\"\n            defaultMessage=\"Adding a Widget\"\n          />\n        </h4>\n\n        <p>\n          <FormattedMessage\n            id=\"Ios14Widget.steps\"\n            defaultMessage=\"You can add a Flora widget by following 3 simple steps:\"\n            values={{ em: (msg) => <em>{msg}</em> }}\n          />\n        </p>\n\n        <ol>\n          <li>\n            <p>\n              <FormattedMessage\n                id=\"Ios14Widget.step1\"\n                defaultMessage=\"Long press the <strong>Home</strong> screen and then tap on the <strong>Add</strong> (<strong>+</strong>) button at the upper-left corner.\"\n                values={{ strong: (msg) => <strong>{msg}</strong> }}\n              />\n            </p>\n          </li>\n          <li>\n            <p>\n              <FormattedMessage\n                id=\"Ios14Widget.step2\"\n                defaultMessage=\"Scroll down in the widget list and choose <strong>Flora</strong>.\"\n                values={{ strong: (msg) => <strong>{msg}</strong> }}\n              />\n            </p>\n          </li>\n          <li>\n            <p>\n              <FormattedMessage\n                id=\"Ios14Widget.step3\"\n                defaultMessage=\"Among different widget sizes, select the one that fits your needs and then press <strong>Add Widget</strong>.\"\n                values={{ strong: (msg) => <strong>{msg}</strong> }}\n              />\n            </p>\n          </li>\n        </ol>\n\n        <p>\n          <FormattedMessage\n            id=\"Ios14Widget.added\"\n            defaultMessage=\"VoilÃ ! You have just turned your Home screen into a lovely garden. From now on, the Flora widget will periodically sync with the main app to display the trees that you have grown right on your Home screen. The syncing takes place about every 30 minutes. So, if you do not see your trees immediately, please wait for a while.\"\n            values={{ em: (msg) => <em>{msg}</em> }}\n          />\n        </p>\n\n        <div className=\"my-4 position-relative\">\n          <div className={styles.mask}></div>\n          <img\n            src={widget}\n            className={classNames(\n              styles.widget,\n              \"img-fluid w-75 d-block mt-4 mb-5 mx-auto shadow\"\n            )}\n            alt=\"\"\n          />\n        </div>\n\n        <h4 className=\"mt-4 mb-3\">\n          <FormattedMessage\n            id=\"Ios14Widget.benefits\"\n            defaultMessage=\"Be Reminded and Motivated\"\n          />\n        </h4>\n\n        <p>\n          <FormattedMessage\n            id=\"Ios14Widget.trees\"\n            defaultMessage=\"As in the main app, each tree in the Flora widget lasts for 7 days. This means that you have to plant trees regularly to maintain a beautiful garden in the widget. When you see fewer and fewer trees, itâ€™s time to grow a new one by putting down your phone and working on the tasks at hand.\"\n            values={{ em: (msg) => <em>{msg}</em> }}\n          />\n        </p>\n\n        <p>\n          <FormattedMessage\n            id=\"Ios14Widget.todos\"\n            defaultMessage=\"If choosing a Flora widget of the largest size, you can also see your to-dos, with the upcoming one highlighted on top. Never forget a thing anymore<em>!</em> Besides, the widget shows the progress youâ€™ve made so you always have a clear picture of how far youâ€™re away from your goals.\"\n            values={{ em: (msg) => <em>{msg}</em> }}\n          />\n        </p>\n\n        <p className=\"pb-5\">\n          <FormattedMessage\n            id=\"Ios14Widget.cta\"\n            defaultMessage=\"Sounds good? Give Flora widgets a try and let us know what you think via our in-app feedback system.\"\n            values={{ em: (msg) => <em>{msg}</em> }}\n          />\n        </p>\n      </Container>\n    </div>\n  );\n}\n"],"sourceRoot":""}